// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

contract DDoSVulnerability {
    function performDoS(uint _iterations) pure public {
        for(uint i = 0; i< _iterations; i++) {
            uint[] memory data = new uint[](_iterations);

            for(uint j = 0; j < _iterations; j++) {
                data[i] = j;            
            }
        }
    }
}

contract DDoSOptimized {

    uint constant MAX_ITERATIONS = 100;

    function performDoS(uint _iterations) pure public {
        require(_iterations <= MAX_ITERATIONS, "Too many iterations");

        for(uint i = 0; i< _iterations; i++) {
            uint[] memory data = new uint[](_iterations);

            for(uint j = 0; j < _iterations; j++) {
                data[i] = j;            
            }
        }
    }
}