// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

contract CostlyOperationsVulnerability {
    uint constant public MAX_ITERATIONS = 1600;

    function performCostlyOperation() pure external returns (uint result) {
        result = 0;

        // Vulnerabilidad => recorre innecesariamente las 1600 veces
        for (uint256 i = 0; i< MAX_ITERATIONS; i++){ 
            result += 1;
        }
    }
}


contract CostlyOperationsOptimized {
    uint constant public MAX_ITERATIONS = 1600;

    function performOperation() pure external returns (uint result) {
        // optimizar el calculo matematico
        result = sumNumbers(MAX_ITERATIONS);
    }

    function sumNumbers(uint256 n) internal pure returns (uint256) {
        return (n* (n+1)) /2;
    }
}
